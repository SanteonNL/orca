openapi: "3.0.0"
info:
  title: Orca Orchestrator API
  description: API specification for Orca Orchestrator
  version: 1.0.0
  license:
    name: GPLv3
paths:
  /exchange:
    post:
      summary: Starts an exchange through Orca
      operationId: startExchange
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - fhir_operation_path
                - oauth2_scope
                - callback_url
              properties:
                callback_url:
                  type: string
                  description: |
                    The URL to which the user agent should be redirected after the exchange has been completed.
                    The exchange_id is appended as a query parameter.
                  example: "https://example.com/callback"
                oauth2_scope:
                  type: string
                  description: |
                    The OAuth 2.0 scope that is required to perform the data exchange.
                    The scope is used to determine the required user authentication at remote parties.
                    The scope is a string that represents the required access rights.
                  example: "homemonitoring"
                fhir_operation_path:
                  type: string
                  description: |
                    The path and query parameters for the FHIR operation to be executed.
                    For now, the FHIR REST interaction is always a GET request.
                  example: "Patient/1234"
      responses:
        "200":
          description: Data was exchange with (remote) parties, result can be retrieved.
          content:
            application/json:
              schema:
                required:
                  - exchange_id
                properties:
                  exchange_id:
                    type: string
                    description: The ID of the exchange. It can be used to retrieve the result.
                    example: "1234"
        "201":
          description: |
            User authentication at one or more remote parties is required to perform the data exchange.
            The user agent (browser) should be redirected to the returned URL.
            
            After completion, the user agent is redirected back to the configured callback URL,
            with the exchange_id as a query parameter. If an error occurred, it is returned as a query parameter as well.
          content:
            application/json:
              schema:
                required:
                  - exchange_id
                  - redirect_url
                properties:
                  exchange_id:
                    type: string
                    description: The ID of the exchange. It can be used to retrieve the result.
                    example: "1234"
                  redirect_url:
                    type: string
                    description: The URL to which the user agent should be redirected for authentication.
                    example: "https://example.com/authenticate"
  /exchange/{id}/result:
    get:
      summary: Retrieves the result of an exchange.
      description: |
        The result of an exchange is the data that was exchanged with (remote) parties.
        The result is only available after the exchange has been completed.
        It can only be retrieved once: after the first retrieval, the result is deleted.
      operationId: getExchangeResult
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the exchange.
          schema:
            type: string
            example: "1234"
      responses:
        "200":
          description: |
            The result of the exchange as FHIR Bundle (https://hl7.org/fhir/R4/bundle.html).
            
            If a (remote) party returned a non-successful response, it is returned as OperationOutcome in the bundle
            (https://hl7.org/fhir/R4/operationoutcome.html).
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FHIRBundle"
        "409":
          description: The result of the exchange is not yet available.
        "404":
          description: The exchange with the given ID does not exist.
components:
  schemas:
    FHIRBundle:
      type: object
