services:
  proxy:
    image: nginx:latest
    depends_on:
      nutsnode:
        condition: service_started
      ehr:
        condition: service_started
      orchestrator:
        condition: service_started
    ports:
      - "9080:8080"
    volumes:
      - "./config/nginx-proxy.conf:/etc/nginx/conf.d/nginx-proxy.conf:ro"
  nutsnode:
    image: nutsfoundation/nuts-node:master
    ports:
      - "9081:8081" # port exposed for loading test data (create DIDs and VCs, requesting access token)
    volumes:
      - "../shared_config/policy/:/nuts/config/policy:ro"
      - "../shared_config/discovery/homemonitoring.json:/nuts/discovery/homemonitoring.json:ro"
    environment:
      - NUTS_VERBOSITY=debug
      - NUTS_STRICTMODE=false
      - NUTS_HTTP_INTERNAL_ADDRESS=:8081
      - NUTS_AUTH_CONTRACTVALIDATORS=dummy
      - NUTS_URL=${NUTS_URL}
      - NUTS_DISCOVERY_DEFINITIONS_DIRECTORY=/nuts/discovery/
      - NUTS_DISCOVERY_SERVER_IDS=dev:HomeMonitoring2024
      - NUTS_VDR_DIDMETHODS=web
  nutsadmin:
    image: "nutsfoundation/nuts-admin:main"
    environment:
      - NUTS_NODE_ADDRESS=http://nutsnode:8081
    ports:
      - "1405:1305"
  frontend:
    image: ghcr.io/santeonnl/orca_frontend:main
    # build:
    #  context: ../../../frontend
    #  dockerfile: Dockerfile
     # Make sure to copy the .env.secrets.example and fill in the terminology server credentials for the tx server to work
    env_file:
      - path: ../../../frontend/.env.secrets
        required: false
    ports:
      - "3003:3000"
  orchestrator:
    image: ghcr.io/santeonnl/orca_orchestrator:main
    #build:
    #  context: ../../../orchestrator
    #  dockerfile: Dockerfile
    ports:
      - "8090:8080"
    volumes:
      - "./config/test-decrypt-zorgplatform.private.pem:/keys/zorgplatform/test-decrypt-zorgplatform.private.pem:ro" # mounted if present - use to test zorgplatform
      - "./config/test-sign-zorgplatform.private.pem:/keys/zorgplatform/test-sign-zorgplatform.private.pem:ro" # mounted if present - use to test zorgplatform
      - "./config/test-tls-zorgplatform.private.pem:/keys/zorgplatform/test-tls-zorgplatform.private.pem:ro" # mounted if present - use to test zorgplatform
    depends_on:
      fhirstore-healthcheck:
        condition: service_completed_successfully
    environment:
      - ORCA_NUTS_API_URL=http://nutsnode:8081
      - ORCA_NUTS_PUBLIC_URL=${NUTS_URL}
      - ORCA_NUTS_SUBJECT=hospital
      - ORCA_NUTS_DISCOVERYSERVICE=dev:HomeMonitoring2024
      - ORCA_PUBLIC_URL=${NUTS_URL}/orca
      - ORCA_CAREPLANSERVICE_ENABLED=true
      - ORCA_CAREPLANSERVICE_ALLOWUNMANAGEDFHIROPERATIONS=true
      - ORCA_CAREPLANSERVICE_FHIR_URL=http://fhirstore:8080/fhir
      - ORCA_CAREPLANCONTRIBUTOR_ENABLED=true
      - ORCA_CAREPLANCONTRIBUTOR_FHIR_URL=http://fhirstore:8080/fhir
      - ORCA_CAREPLANCONTRIBUTOR_CAREPLANSERVICE_URL=${CAREPLANCONTRIBUTOR_CAREPLANSERVICE_URL}
      - ORCA_CAREPLANCONTRIBUTOR_FRONTEND_URL=${HOSPITAL_URL}/frontend/enrollment/new
      - ORCA_CAREPLANCONTRIBUTOR_APPLAUNCH_DEMO_ENABLED=true
      - ORCA_CAREPLANCONTRIBUTOR_HEALTHDATAVIEWENDPOINTENABLED=true
      #   Uncomment and set the <...> values below to enable Zorgplatform integration - using zorgplatform production URLs as that is what their developer portal uses
      # - ORCA_CAREPLANCONTRIBUTOR_APPLAUNCH_ZORGPLATFORM_ENABLED=true
      # - ORCA_CAREPLANCONTRIBUTOR_APPLAUNCH_ZORGPLATFORM_SIGN_ISS=<iss>
      # - ORCA_CAREPLANCONTRIBUTOR_APPLAUNCH_ZORGPLATFORM_SIGN_AUD=https://zorgplatform.online/sts
      # - ORCA_CAREPLANCONTRIBUTOR_APPLAUNCH_ZORGPLATFORM_DECRYPT_ISS=https://zorgplatform.online/sts
      # - ORCA_CAREPLANCONTRIBUTOR_APPLAUNCH_ZORGPLATFORM_DECRYPT_AUD=<aud>
      # - ORCA_CAREPLANCONTRIBUTOR_APPLAUNCH_ZORGPLATFORM_DECRYPT_SIGNCERTPEM=-----BEGIN CERTIFICATE-----\nMIIGpTCCBY2gAwIBAgIJAJ7SiMwCRCiBMA0GCSqGSIb3DQEBCwUAMIG0MQswCQYD\nVQQGEwJVUzEQMA4GA1UECBMHQXJpem9uYTETMBEGA1UEBxMKU2NvdHRzZGFsZTEa\nMBgGA1UEChMRR29EYWRkeS5jb20sIEluYy4xLTArBgNVBAsTJGh0dHA6Ly9jZXJ0\ncy5nb2RhZGR5LmNvbS9yZXBvc2l0b3J5LzEzMDEGA1UEAxMqR28gRGFkZHkgU2Vj\ndXJlIENlcnRpZmljYXRlIEF1dGhvcml0eSAtIEcyMB4XDTI0MDcwMzE2MDMyNFoX\nDTI1MDgwNDE2MDMyNFowIDEeMBwGA1UEAwwVKi56b3JncGxhdGZvcm0ub25saW5l\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAptpmGW3pOURCzuF1+oyP\nvIW8bGEjPLyRzMfn29WhNFj8HrkH7+tQCaNE3aL1TTcskwAZEsXTxC9pGAbuqGrU\nUkc8TIDX/Ze6W9CnT/bUYfYl43hLXmmdElxdCtYZAcJtbIeR3bSR1hqdH0w3T/Ob\nQ8bDl5TXGX6IPPf/vZ/tBsv/886brz+bXSwArSzNwVBqvVW+EpSyWnDm45/oXzbE\nN9Sl7kRzlUuzMDH+GWGNRGOItBfIfixRp4NiopBt7WYBw/lOaUvjYH+GsC46fZzT\nXu0gwzkw8/AqJRyS0OkYGmddEswUizBIPH6OLmjPskpqc6WrsoL2VipcaA+hr0Fz\nZwIDAQABo4IDSzCCA0cwDAYDVR0TAQH/BAIwADAdBgNVHSUEFjAUBggrBgEFBQcD\nAQYIKwYBBQUHAwIwDgYDVR0PAQH/BAQDAgWgMDkGA1UdHwQyMDAwLqAsoCqGKGh0\ndHA6Ly9jcmwuZ29kYWRkeS5jb20vZ2RpZzJzMS0yNDM0MS5jcmwwXQYDVR0gBFYw\nVDBIBgtghkgBhv1tAQcXATA5MDcGCCsGAQUFBwIBFitodHRwOi8vY2VydGlmaWNh\ndGVzLmdvZGFkZHkuY29tL3JlcG9zaXRvcnkvMAgGBmeBDAECATB2BggrBgEFBQcB\nAQRqMGgwJAYIKwYBBQUHMAGGGGh0dHA6Ly9vY3NwLmdvZGFkZHkuY29tLzBABggr\nBgEFBQcwAoY0aHR0cDovL2NlcnRpZmljYXRlcy5nb2RhZGR5LmNvbS9yZXBvc2l0\nb3J5L2dkaWcyLmNydDAfBgNVHSMEGDAWgBRAwr0njsw0gzCiM9f7bLPwtCyAzjA1\nBgNVHREELjAsghUqLnpvcmdwbGF0Zm9ybS5vbmxpbmWCE3pvcmdwbGF0Zm9ybS5v\nbmxpbmUwHQYDVR0OBBYEFPZefQaBIVcTvBQ6Q7aL5Xs9z+OrMIIBfQYKKwYBBAHW\neQIEAgSCAW0EggFpAWcAdgAS8U40vVNyTIQGGcOPP3oT+Oe1YoeInG0wBYTr5YYm\nOgAAAZB5Vh7tAAAEAwBHMEUCIQDdEs3O/Bh0XyB/bNCDYHnGsvy2uvIqLGLUyXcI\nzi97pwIgWUdyVuJi9r6l0iVFJpNiHIl/7OdG6v7F1ppRsRQ4gFwAdQB9WR4S4Xgq\nexxhZ3xe/fjQh1wUoE6VnrkDL9kOjC55uAAAAZB5Vh/1AAAEAwBGMEQCIBZ0Y+G1\njNdhFJXKRwhWkkIhRmCKPuBN/U596oL7Yta7AiAZ9hEqvZw8qqWckQR5M0He2rgF\nWE9w3frfzuYNd9OsGAB2AMz7D2qFcQll/pWbU87psnwi6YVcDZeNtql+VMD+TA2w\nAAABkHlWIKkAAAQDAEcwRQIhAKI5arrZ02GLep/gElJGSxNJp4HepzjXJC5dF9N7\n5et3AiAqQHOYLY1u8xWl45guYPxpBiSKf+bKxhyZYPCN1wRQEzANBgkqhkiG9w0B\nAQsFAAOCAQEAGFpFlsmdTCsiSEgwSHW1NPgeZV0EkiS7wz52iuLdphheoIY9xw44\niPNrUknBcP9gfoMpUmMGKelwDdauUitEsHQYo2cFATJvIGyMkK5hxcldZdmjgehi\n8tXl7/3gH3R2f6CPOEUbG/+Tlc50cdN0o4jd/qZlfMjDo9odblOVHe4oOlnJYugB\nKLh5Cy6PjY6n28xqStJFd2Aximzius46N1XC1XjtMCpwUov+wrf3/CkDTc7dWSU3\nyBBl3pbBMYkf2wjOBGWWXcRuK+Tldk1nA0SI0zRRlzjgi4mD74fXdUwtr8Chsh9u\nU6OWTXiki5XGd75h6duSZG9qvqymSIuTjA==\n-----END CERTIFICATE-----
      # - ORCA_CAREPLANCONTRIBUTOR_APPLAUNCH_ZORGPLATFORM_BASEURL=https://zorgplatform.online
      # - ORCA_CAREPLANCONTRIBUTOR_APPLAUNCH_ZORGPLATFORM_STSURL=https://zorgplatform.online/sts
      # - ORCA_CAREPLANCONTRIBUTOR_APPLAUNCH_ZORGPLATFORM_TASKPERFORMERURA=1234
      # - ORCA_CAREPLANCONTRIBUTOR_APPLAUNCH_ZORGPLATFORM_APIURL=https://api.zorgplatform.online/fhir/V1
      # - ORCA_CAREPLANCONTRIBUTOR_APPLAUNCH_ZORGPLATFORM_AZURE_CREDENTIALTYPE=default
      # - ORCA_CAREPLANCONTRIBUTOR_APPLAUNCH_ZORGPLATFORM_X509_SIGNCERTFILE=/keys/zorgplatform/test-sign-zorgplatform.private.pem
      # - ORCA_CAREPLANCONTRIBUTOR_APPLAUNCH_ZORGPLATFORM_X509_SIGNKEYFILE=/keys/zorgplatform/test-sign-zorgplatform.private.pem
      # - ORCA_CAREPLANCONTRIBUTOR_APPLAUNCH_ZORGPLATFORM_X509_DECRYPTCERTFILE=/keys/zorgplatform/test-decrypt-zorgplatform.private.pem
      # - ORCA_CAREPLANCONTRIBUTOR_APPLAUNCH_ZORGPLATFORM_X509_CLIENTCERTFILE=/keys/zorgplatform/test-tls-zorgplatform.private.pem
  fhirstore:
    image: hapiproject/hapi:v7.2.0
    ports:
      - "9090:8080"
    environment:
      - hapi.fhir.fhir_version=R4
      - hapi.fhir.server_address=${HOSPITAL_URL}/fhir
  # The HAPI image has no binaries such as curl, so we use the curl image to perform the health check  
  fhirstore-healthcheck:
    image: curlimages/curl:7.87.0
    depends_on:
      - fhirstore
    entrypoint: ["sh", "-c", "echo 'Starting fhirstore healthcheck...'; while ! curl -s -f http://fhirstore:8080/fhir/metadata; do echo 'Waiting for fhirstore to be ready...'; sleep 5; done; echo 'fhirstore is up and running.'"]
    
    # Ensure the container exits successfully after the check
    restart: "no"
  ehr:
    image: ghcr.io/santeonnl/orca_hospitalsimulator:main
    # build:
    #  context: ../../../hospital_simulator
    #  dockerfile: Dockerfile
    ports:
      - "3001:3000"
    depends_on:
      - fhirstore
    environment:
      ORCA_LOCAL_ORGANIZATION_URA: 4567
      ORCA_LOCAL_ORGANIZATION_NAME: Demo Hospital
      ORCA_PERFORMER_ORGANIZATION_URA: 1234
      ORCA_PERFORMER_ORGANIZATION_NAME: Demo Clinic

#  hospital_sof_adapter:
#    build:
#      context: ../../../smartonfhir_backend_adapter
#      dockerfile: Dockerfile
#    environment:
#      - SOF_BACKEND_ADAPTER_FHIR_BASEURL=https://launch.smarthealthit.org/v/r4/sim/WzQsIiIsIiIsIiIsMCwwLDAsIiIsIiIsIiIsIiIsIiIsIiIsIiIsMCwxXQ/fhir
#      - SOF_BACKEND_ADAPTER_LISTEN_ADDRESS=:8080
#      - SOF_BACKEND_ADAPTER_OAUTH_CLIENT_ID=canbeanything_for_smart_sandbox
#      - SOF_BACKEND_ADAPTER_SIGNINGKEY_FILE=/app/jwk.json
#    ports:
#      - "8080"
#    volumes:
#      - ./config/sof_adapter_signingkey.json:/app/jwk.json:ro
