services:
  proxy:
    image: nginx:latest
    depends_on:
      - nutsnode
      - orchestrator
    ports:
      - "7080:8080"
    volumes:
      - "./config/nginx-proxy.conf:/etc/nginx/conf.d/nginx-proxy.conf:ro"
  nutsnode:
    image: nutsfoundation/nuts-node:6.1.2
    ports:
      - "8081:8081" # port exposed for loading test data (create DIDs and VCs, requesting access token)
    volumes:
      - "../shared_config/policy/:/nuts/config/policy:ro"
      - "../shared_config/discovery/homemonitoring.json:/nuts/discovery/homemonitoring.json:ro"
    environment:
      - NUTS_VERBOSITY=debug
      - NUTS_STRICTMODE=false
      - NUTS_HTTP_INTERNAL_ADDRESS=:8081
      - NUTS_AUTH_CONTRACTVALIDATORS=dummy
      - NUTS_URL=${NUTS_URL}
      - NUTS_DISCOVERY_DEFINITIONS_DIRECTORY=/nuts/discovery/
      - NUTS_VDR_DIDMETHODS=web
  nutsadmin:
    image: "nutsfoundation/nuts-admin:main"
    environment:
      - NUTS_NODE_ADDRESS=http://nutsnode:8081
    ports:
      - "1305:1305"
  orchestrator:
    #image: ghcr.io/santeonnl/orca_orchestrator:main
    build:
      context: ../../../orchestrator
      dockerfile: Dockerfile
    ports:
      - "3030:8080"
    env_file:
      # Allow extra environment variables to be passed in. This is useful for local development, since extra.env isn't committed to the repository.
      - path: ./extra.env
        required: false
    environment:
      - ORCA_NUTS_API_URL=http://nutsnode:8081
      - ORCA_NUTS_PUBLIC_URL=${NUTS_URL}
      - ORCA_NUTS_SUBJECT=clinic
      - ORCA_NUTS_DISCOVERYSERVICE=dev:HomeMonitoring2024
      - ORCA_PUBLIC_URL=${NUTS_URL}/orca
      - ORCA_STRICTMODE=false
      - ORCA_MESSAGING_HTTP_ENDPOINT=${NUTS_URL}/viewer/api/delivery
      - ORCA_MESSAGING_HTTP_TOPICFILTER=orca-enroll-patient
      - ORCA_CAREPLANCONTRIBUTOR_STATICBEARERTOKEN=valid
      - ORCA_CAREPLANCONTRIBUTOR_HEALTHDATAVIEWENDPOINTENABLED=true
      - ORCA_CAREPLANCONTRIBUTOR_FHIR_URL=http://viewer:3000/viewer/api/fhir
      # Register an example web application for discovery by other SCP participants.
      - ORCA_CAREPLANCONTRIBUTOR_APPLAUNCH_EXTERNAL_0_NAME=Example Web Application
      - ORCA_CAREPLANCONTRIBUTOR_APPLAUNCH_EXTERNAL_0_URL=https://example.com
      # If this value is set, the clinic will send task notifications over http to the provided endpoint. Cannot be used in conjunction with the strict mode
      - ORCA_CAREPLANCONTRIBUTOR_TASKFILLER_TASKACCEPTEDBUNDLETOPIC=orca-enroll-patient
      - ORCA_CAREPLANCONTRIBUTOR_TASKFILLER_QUESTIONNAIRESYNCURLS=https://raw.githubusercontent.com/Zorgbijjou/scp-homemonitoring/refs/heads/main/fsh-generated/resources/Bundle-zbj-bundle-healthcareservices.json,https://raw.githubusercontent.com/Zorgbijjou/scp-homemonitoring/refs/heads/main/fsh-generated/resources/Bundle-zbj-bundle-questionnaires.json
    volumes:
      # FHIR HealthcareService and Questionnaire resources that are loaded into the FHIR store on startup,
      # used by the Task Filler Engine
      - "../../../orchestrator/careplancontributor/taskengine/testdata/healthcareservice-bundle.json:/config/fhir/healthcareservices.json:ro"
      - "../../../orchestrator/careplancontributor/taskengine/testdata/questionnaire-bundle.json:/config/fhir/questionnaires.json:ro"
  viewer:
    image: ghcr.io/santeonnl/orca_viewersimulator:main
#    build:
#      context: ../../../viewer_simulator
#      dockerfile: Dockerfile
    environment:
      FHIR_BASE_URL: ${HOSPITAL_URL}/orca/cpc/cps/fhir
      FHIR_AGGREGATE_URL: http://orchestrator:8080/cpc/aggregate/fhir
      FHIR_AUTHORIZATION_TOKEN: valid
      NEXT_ALLOWED_ORIGINS: localhost:7080
      ORCA_CPC_URL: http://orchestrator:8080/cpc
      FAUXCARE_CAREPLANSERVICE_URL: ${HOSPITAL_URL}/orca/cps
      FAUXCARE_BEARER_TOKEN: valid

